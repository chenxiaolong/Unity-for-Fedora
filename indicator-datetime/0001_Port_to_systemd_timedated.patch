diff -Nru indicator-datetime-12.10.2.orig/data/com.canonical.indicator.datetime.gschema.xml indicator-datetime-12.10.2/data/com.canonical.indicator.datetime.gschema.xml
--- indicator-datetime-12.10.2.orig/data/com.canonical.indicator.datetime.gschema.xml	2012-10-23 23:45:15.868545038 -0400
+++ indicator-datetime-12.10.2/data/com.canonical.indicator.datetime.gschema.xml	2012-10-23 23:46:06.031906518 -0400
@@ -89,7 +89,7 @@
 			<default>false</default>
 			<summary>Show the auto-detected location in the indicator</summary>
 			<description>
-			  Shows your current location (determined from geoclue and /etc/timezone) in indicator-datetime's menu.
+			  Shows your current location (determined from geoclue and systemd's timedated) in indicator-datetime's menu.
 			</description>
 		</key>
 		<key name="show-locations" type="b">
diff -Nru indicator-datetime-12.10.2.orig/src/datetime-service.c indicator-datetime-12.10.2/src/datetime-service.c
--- indicator-datetime-12.10.2.orig/src/datetime-service.c	2012-10-23 23:45:15.868545038 -0400
+++ indicator-datetime-12.10.2/src/datetime-service.c	2012-10-24 00:09:07.246333528 -0400
@@ -50,6 +50,7 @@
 #include "dbus-shared.h"
 #include "settings-shared.h"
 #include "utils.h"
+#include "timedate1.h"
 
 /* how often to check for clock skew */
 #define SKEW_CHECK_INTERVAL_SEC 10
@@ -1074,7 +1075,7 @@
 
 /* Run when the timezone file changes */
 static void
-timezone_changed (GFileMonitor * monitor, GFile * file, GFile * otherfile, GFileMonitorEvent event, gpointer user_data)
+timezone_changed ()
 {
 	update_current_timezone();
 	on_clock_skew();
@@ -1085,14 +1086,28 @@
 static void
 build_timezone (DatetimeInterface * dbus)
 {
-	GFile * timezonefile = g_file_new_for_path(TIMEZONE_FILE);
-	GFileMonitor * monitor = g_file_monitor_file(timezonefile, G_FILE_MONITOR_NONE, NULL, NULL);
-	if (monitor != NULL) {
-		g_signal_connect(G_OBJECT(monitor), "changed", G_CALLBACK(timezone_changed), dbus);
-		g_debug("Monitoring timezone file: '" TIMEZONE_FILE "'");
+	/* Monitor systemd's timedated interface */
+	GCancellable * cancellable = g_cancellable_new();
+	GError * error = NULL;
+	Timedate1 * tz = timedate1_proxy_new_for_bus_sync(G_BUS_TYPE_SYSTEM,
+							  G_DBUS_PROXY_FLAGS_NONE,
+							  "org.freedesktop.timedate1",
+							  "/org/freedesktop/timedate1",
+							  cancellable,
+							  &error);
+
+	if (tz != NULL) {
+		g_signal_connect(tz, "notify::timezone",
+				 G_CALLBACK(timezone_changed), dbus);
+		g_debug("Monitoring timedated");
 	} else {
-		g_warning("Unable to monitor timezone file: '" TIMEZONE_FILE "'");
+		g_warning("Unable to monitor timedated");
+	}
+
+	if (error) {
+		g_error_free(error);
 	}
+
 	return;
 }
 
diff -Nru indicator-datetime-12.10.2.orig/src/Makefile.am indicator-datetime-12.10.2/src/Makefile.am
--- indicator-datetime-12.10.2.orig/src/Makefile.am	2012-10-23 23:45:15.868545038 -0400
+++ indicator-datetime-12.10.2/src/Makefile.am	2012-10-23 23:49:58.229412843 -0400
@@ -11,6 +11,8 @@
 	datetime-interface.h \
 	gen-datetime-service.xml.c \
 	datetime-service.c \
+	timedate1.c \
+	timedate1.h \
 	utils.c \
 	utils.h \
 	dbus-shared.h \
@@ -20,7 +22,6 @@
 	-Werror \
 	$(SERVICE_CFLAGS) \
 	$(COVERAGE_CFLAGS) \
-	-DTIMEZONE_FILE="\"/etc/timezone\"" \
 	-DG_LOG_DOMAIN=\"Indicator-Datetime\"
 indicator_datetime_service_LDADD = \
 	$(SERVICE_LIBS)
@@ -33,6 +34,8 @@
 	gen-datetime-service.xml.h \
 	dbus-shared.h \
 	settings-shared.h \
+	timedate1.c \
+	timedate1.h \
 	utils.c \
 	utils.h \
 	indicator-datetime.c
@@ -40,7 +43,6 @@
 	$(INDICATOR_CFLAGS) \
 	$(COVERAGE_CFLAGS) \
 	-Wall -Werror \
-	-DTIMEZONE_FILE="\"/etc/timezone\"" \
 	-DG_LOG_DOMAIN=\"Indicator-Datetime\"
 libdatetime_la_LIBADD = \
 	$(INDICATOR_LIBS)
@@ -54,6 +56,8 @@
 	datetime-prefs.c \
 	datetime-prefs-locations.c \
 	datetime-prefs-locations.h \
+	timedate1.c \
+	timedate1.h \
 	utils.c \
 	utils.h \
 	settings-shared.h
@@ -62,7 +66,6 @@
 	-Werror \
 	$(PREF_CFLAGS) \
 	$(COVERAGE_CFLAGS) \
-	-DTIMEZONE_FILE="\"/etc/timezone\"" \
 	-DPKGDATADIR="\"$(pkgdatadir)\""
 libindicator_datetime_la_LIBADD = \
 	$(PREF_LIBS)
@@ -71,6 +74,24 @@
 	-module -avoid-version
 endif
 
+# This operation needs the timedated daemon and DBus to be available during
+# the build process.
+#timedate1-interface.xml:
+#	gdbus introspect					\
+#		--xml						\
+#		--system					\
+#		--dest org.freedesktop.timedate1		\
+#		--object-path /org/freedesktop/timedate1	\
+#		> timedate1-interface.xml
+
+timedate1.c: timedate1.h
+
+timedate1.h: Makefile.am timedate1-interface.xml
+	gdbus-codegen					\
+		--interface-prefix org.freedesktop.	\
+		--generate-c-code timedate1		\
+		$(srcdir)/timedate1-interface.xml
+
 gen-%.xml.c: %.xml
 	@echo "Building $@ from $<"
 	@echo "const char * _$(subst -,_,$(subst .,_,$(basename $(notdir $<)))) = " > $@
@@ -87,7 +108,10 @@
 
 
 CLEANFILES = \
+	timedate1.c \
+	timedate1.h \
 	$(BUILT_SOURCES)
 
 EXTRA_DIST = \
+	timedate1-interface.xml \
 	datetime-service.xml
diff -Nru indicator-datetime-12.10.2.orig/src/timedate1-interface.xml indicator-datetime-12.10.2/src/timedate1-interface.xml
--- indicator-datetime-12.10.2.orig/src/timedate1-interface.xml	1969-12-31 19:00:00.000000000 -0500
+++ indicator-datetime-12.10.2/src/timedate1-interface.xml	2012-10-23 23:50:33.622774869 -0400
@@ -0,0 +1,59 @@
+<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
+"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
+<node>
+ <interface name="org.freedesktop.timedate1">
+  <property name="Timezone" type="s" access="read"/>
+  <property name="LocalRTC" type="b" access="read"/>
+  <property name="NTP" type="b" access="read"/>
+  <method name="SetTime">
+   <arg name="usec_utc" type="x" direction="in"/>
+   <arg name="relative" type="b" direction="in"/>
+   <arg name="user_interaction" type="b" direction="in"/>
+  </method>
+  <method name="SetTimezone">
+   <arg name="timezone" type="s" direction="in"/>
+   <arg name="user_interaction" type="b" direction="in"/>
+  </method>
+  <method name="SetLocalRTC">
+   <arg name="local_rtc" type="b" direction="in"/>
+   <arg name="fix_system" type="b" direction="in"/>
+   <arg name="user_interaction" type="b" direction="in"/>
+  </method>
+  <method name="SetNTP">
+   <arg name="use_ntp" type="b" direction="in"/>
+   <arg name="user_interaction" type="b" direction="in"/>
+  </method>
+ </interface>
+ <interface name="org.freedesktop.DBus.Properties">
+  <method name="Get">
+   <arg name="interface" direction="in" type="s"/>
+   <arg name="property" direction="in" type="s"/>
+   <arg name="value" direction="out" type="v"/>
+  </method>
+  <method name="GetAll">
+   <arg name="interface" direction="in" type="s"/>
+   <arg name="properties" direction="out" type="a{sv}"/>
+  </method>
+  <method name="Set">
+   <arg name="interface" direction="in" type="s"/>
+   <arg name="property" direction="in" type="s"/>
+   <arg name="value" direction="in" type="v"/>
+  </method>
+  <signal name="PropertiesChanged">
+   <arg type="s" name="interface"/>
+   <arg type="a{sv}" name="changed_properties"/>
+   <arg type="as" name="invalidated_properties"/>
+  </signal>
+ </interface>
+ <interface name="org.freedesktop.DBus.Introspectable">
+  <method name="Introspect">
+   <arg name="data" type="s" direction="out"/>
+  </method>
+ </interface>
+<interface name="org.freedesktop.DBus.Peer">
+ <method name="Ping"/>
+ <method name="GetMachineId">
+  <arg type="s" name="machine_uuid" direction="out"/>
+ </method>
+</interface>
+</node>
diff -Nru indicator-datetime-12.10.2.orig/src/utils.c indicator-datetime-12.10.2/src/utils.c
--- indicator-datetime-12.10.2.orig/src/utils.c	2012-10-23 23:45:15.868545038 -0400
+++ indicator-datetime-12.10.2/src/utils.c	2012-10-23 23:55:52.046346850 -0400
@@ -31,6 +31,7 @@
 #include <string.h>
 #include "utils.h"
 #include "settings-shared.h"
+#include "timedate1.h"
 
 /* Check the system locale setting to see if the format is 24-hour
    time or 12-hour time */
@@ -120,25 +121,46 @@
 gchar *
 read_timezone ()
 {
+	gchar * timezone = NULL;
+
+	/* Try to get timezone from systemd */
+	GCancellable * cancellable = g_cancellable_new();
 	GError * error = NULL;
-	gchar * tempzone = NULL;
-	if (!g_file_get_contents(TIMEZONE_FILE, &tempzone, NULL, &error)) {
-		g_warning("Unable to read timezone file '" TIMEZONE_FILE "': %s", error->message);
-		g_error_free(error);
-		return NULL;
+
+	Timedate1 * tz = timedate1_proxy_new_for_bus_sync(
+						G_BUS_TYPE_SYSTEM,
+						G_DBUS_PROXY_FLAGS_NONE,
+						"org.freedesktop.timedate1",
+						"/org/freedesktop/timedate1",
+						cancellable,
+						&error);
+
+	if (tz == NULL) {
+		g_warning("Error: %s", error->message);
+ 	}
+
+	const gchar * timezone_systemd = timedate1_get_timezone(tz);
+
+	if (timezone_systemd != NULL) {
+		timezone = g_strdup(timezone_systemd);
 	}
 
-	/* This shouldn't happen, so let's make it a big boom! */
-	g_return_val_if_fail(tempzone != NULL, NULL);
+	if (cancellable) {
+		g_cancellable_cancel(cancellable);
+		g_object_unref(cancellable);
+		cancellable = NULL;
+	}
 
-	/* Note: this really makes sense as strstrip works in place
-	   so we end up with something a little odd without the dup
-	   so we have the dup to make sure everything is as expected
-	   for everyone else. */
-	gchar * rv = g_strdup(g_strstrip(tempzone));
-	g_free(tempzone);
+	if (tz) {
+		g_object_unref(tz);
+		tz = NULL;
+	}
 
-  return rv;
+	if (error) {
+		g_error_free(error);
+	}
+
+	return timezone;
 }
 
 /* Translate msg according to the locale specified by LC_TIME */
